// out: false

#main-canvas {
	svg {
		-webkit-user-select: none;
		-moz-user-select: none;
		-ms-user-select: none;
		-o-user-select: none;
		user-select: none;
	}

	path.link {
		fill: none;
		stroke: #999999;
		stroke-width: 4px;
		cursor: default;

		&.dragline {
			pointer-events: none;
		}

		&.hidden {
			stroke-width: 0;
		}
	}

	text {
		font: 12px sans-serif;
		pointer-events: none;

		&.label {
			text-anchor: middle;
			font-weight: bold;
		}
	}
}
.node {
	fill: white;
	stroke: black;
	stroke-width: 1.5px;
	cursor: auto;

	&.transition {
		transform: translate(-18px, -18px);
	}
}

.cp {
	fill: #80ff80;
	stroke: #00cc00;
	stroke-width: 1.5px;
	&.hidden{
		stroke-width:0px;
		radius: 0;
		fill: none;
	}
}

.cpedge{
	stroke: #00cc00;
	stroke-width: 1.5px;
	&.hidden{
		stroke-width:0px;
		fill: none;
	}
}
.Fix.Nodes {
	.node {
		cursor: move;
	}
	.cp{
		cursor: move;
	}
}

.Select	{
	.inSubnet {
			stroke: #9999ff !important;
			stroke-width: 4px;
			stroke-dasharray: 10,5;
		}
	.node {
		cursor: pointer;
		&.inSelection {
			stroke-dasharray: none !important;
			stroke: #4d4dff !important;
			stroke-width: 4px;
			fill :  #e6e6ff;
		}
	}
}
// Token mode
.Tokens {
	.place {
		cursor: text;
	}
	.transition {
		stroke-width: 3px;
		stroke: #E53935;
		cursor: not-allowed;
		&.firable {
			stroke: #43A047;
			cursor: e-resize;
		}
	}
}
// Arrow Mode
.Arrows,
.Delete {
	#main-canvas {
		cursor: default;
		.node {
			cursor: crosshair;
		}
	}
}
// Delete mode
.Delete {
	#main-canvas {
		cursor: default;
		.edge,
		.node {
			cursor: crosshair;
		}
	}
}
// Labels mode
.Labels {
	#main-canvas {
		cursor: default;
		.edge,
		.node {
			cursor: text;
		}
	}
}
// Initial State mode
.Initial {
	#main-canvas {
		cursor: default;
		.state {
			cursor: pointer;
		}
	}
}
// Node modes
.Places,
.States,
.Transitions {
	.node {
		cursor: move;
	}
}
.definitions {
	height: 0;
}
.initState {
	display: none;
}
